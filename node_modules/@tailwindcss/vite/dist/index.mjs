import{IO as v,Parsing as y,scanFiles as w}from"@tailwindcss/oxide";import g from"path";import{compile as h,optimizeCss as S}from"tailwindcss";function x(){let s=null,l=new Set,a=new Set,u=!1;function d(e){let[t]=e.split("?",2);return g.extname(t).slice(1)==="css"}function c(){if(!s)return;let e=[];for(let t of a){let i=s.moduleGraph.getModuleById(t);if(!i){console.log("Could not find css module",t);continue}s.moduleGraph.invalidateModule(i),e.push({type:`${i.type}-update`,path:i.url,acceptedPath:i.url,timestamp:Date.now()})}e.length>0&&s.hot.send({type:"update",updates:e})}function f(e,t){let i=!1;for(let n of w([{content:e,extension:t}],v.Sequential|y.Sequential)){if(!i){if(l.has(n))continue;i=!0}l.add(n)}return i}function p(e){return S(h(e,Array.from(l)),{minify:u})}let o=(()=>{let e=50,t,i,n=!1;return{tick(){n||(t&&clearTimeout(t),t=setTimeout(i,e))},complete:new Promise(r=>{i=()=>{n=!0,r()}})}})();return[{name:"@tailwindcss/vite:scan",enforce:"pre",configureServer(e){s=e},async configResolved(e){u=e.build.cssMinify!==!1},transformIndexHtml(e){o.tick();let t=f(e,"html");s&&t&&c()},transform(e,t){if(o.tick(),t.includes("/.vite/"))return;let[i]=t.split("?",2),n=g.extname(i).slice(1);n===""||n==="css"||(f(e,n),s&&c())}},{name:"@tailwindcss/vite:generate:serve",apply:"serve",async transform(e,t){if(!(!d(t)||!e.includes("@tailwind")))return a.add(t),await o.complete,{code:p(e)}}},{name:"@tailwindcss/vite:generate:build",enforce:"post",apply:"build",generateBundle(e,t){for(let i in t){let n=t[i];if(n.type!=="asset"||!d(i))continue;let r=n.source,m=r instanceof Uint8Array?new TextDecoder().decode(r):r;m.includes("@tailwind")&&(n.source=p(m))}}}]}export{x as default};
